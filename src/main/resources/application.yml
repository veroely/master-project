spring:
  application:
    name: payment_services

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

external-services:
  electricity-provider:
    url: http://localhost:9090
    timeout:
      connection: 5000
      read: 5000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
#    metrics:
#      enabled: true
#  metrics:
#    export:
#      prometheus:
#        enabled: true
#    distribution:
#      percentiles-histogram: "http.server.requests,http.client.requests"
#    tags:
#      application: ${spring.application.name}
#      environment: ${spring.profiles.active:local}

resilience4j:
  circuitbreaker:
    instances:
      getBill:
        register-health-indicator: true
        sliding-window-size: 10
        sliding-window-type: count_based
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60000
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.io.IOException
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException
          - feign.RetryableException

logging:
  level:
    io.github.resilience4j.circuitbreaker: DEBUG
    org.springframework.cloud.circuitbreaker.resilience4j: DEBUG

server:
  port: 5000


